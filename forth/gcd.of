\ *********************************************************************
\    Filename:      gcd.of                                            *
\    Date:          05.12.2020                                        *
\    MCU:           ATmega328P                                        *
\    Copyright:     bitflipser                                        *
\    Author:        bitflipser                                        *
\ *********************************************************************
\ OptiForth is MIT licensed                                           *
\ *********************************************************************
\ benchmark tests computing the greatest common divider                
\ based on                                                             
\ https://weblambdazero.blogspot.com/2016/10/go-forth-with-arduino.html
-gcd                                         
marker -gcd                                  
ticks : cfor ticks>n                         
          for r@ 1+ dup                      
            for dup r@ 1+ gcd drop next drop 
          next ticks=                       ;
ticks= u. \ compiling time:
\ -----------------------------
ticks : cwhi ticks>n                          
          begin dup                           
            begin 2dup gcd drop 1- 0until drop
          1- 0until drop                      
          ticks=                            ;
ticks= u. \ compiling time:
\ -----------------------------
\ not using the kernel word 'gcd'
: gcD begin dup while tuck mod repeat drop  ;
ticks : bfor ticks>n                         
          for r@ 1+ dup                      
            for dup r@ 1+ gcD drop next drop 
          next ticks=                       ;
ticks= u. \ compiling time:
\ -----------------------------
ticks : bwhi ticks>n                          
          begin dup                           
            begin 2dup gcD drop 1- 0until drop
          1- 0until drop                      
          ticks=                            ;
ticks= u. \ compiling time:
\ -----------------------------
ticks : bloop                                
        ticks>n                              
          1 do                               
             i 1 do j i gcD drop loop        
            loop                             
        ticks=                              ;
ticks= u. \ compiling time:
\ -----------------------------
: bfor_t ticks>n                                  
          for r@ 1+ dup                           
            for dup r@ 1+ gcD drop pause next drop
          next ticks=                       ;
: bwhi_t ticks>n                                  
          begin dup                               
            begin 2dup gcD drop pause 1- 0until drop
          1- 0until drop                          
          ticks=                            ;
( done )                                     
\ check result                               
#17 #51 gcd u. #17 #51 gcD u. \ both equal #17?
\                                                 
\ benchmark with 20.100 calls of 'gcd' resp. 'gcD'
\                                                 
\ using the kernel word 'gcd'                     
\ comparing 'begin..0until' and 'for..next'       
\ #200 cwhi u. #200 cfor u.                       
\                                                 
\ using the user word 'gcD'                       
\ overhead caused by 'tuck'                       
\ comparing 'begin..0until', 'for..next' and 'do..loop'
\ #200 bwhi u. #200 bfor u. #200 bloop u.              
\                                                      
\ checking overhead caused by task switching ('pause') 
\ #200 bwhi_t u. #200 bfor_t u.                        
\                                                      
decimal busy
#200 cwhi u. #200 cfor u.              
#200 bwhi u. #200 bfor u. #200 bloop u.
#200 bwhi_t u. #200 bfor_t u.          
